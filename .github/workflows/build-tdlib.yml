name: Android SDK & NDK Setup with TDLib Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-tdlib:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gperf php unzip wget

    - name: Download TDLib
      run: |
        git clone https://github.com/tdlib/td.git

    - name: Set up SDK and NDK
      run: |
        cd td/example/android/
        mkdir -p SDK NDK
        # Download and unzip the SDK
        sdkmanager --install "platforms;android-34" "build-tools;34.0.0" --sdk_root=${PWD}/SDK
        # Download and extract the NDK
        wget https://dl.google.com/android/repository/android-ndk-r27-linux-x86_64.zip -O ndk.zip
        unzip ndk.zip -d NDK
        rm ndk.zip

    - name: Set up environment variables
      run: |
        echo "ANDROID_HOME=${{ github.workspace }}/td/example/android/SDK" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=${{ github.workspace }}/td/example/android/NDK" >> $GITHUB_ENV

    - name: Print environment variables
      run: |
        echo "ANDROID_HOME=$ANDROID_HOME"
        echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME"

    - name: Build TDLib for Android
      run: |
        cd td/example/android/
        ./build-tdlib.sh

    - name: Zip the TDLib Android folder
      run: |
        cd td/example/android/
        zip -r tdlib-android.zip ./

    - name: Upload the artifact
      uses: actions/upload-artifact@v3
      with:
        name: tdlib-android
        path: td/example/android/tdlib-android.zip
