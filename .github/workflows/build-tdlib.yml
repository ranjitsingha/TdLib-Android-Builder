name: Android SDK & NDK Setup with TDLib Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-tdlib:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gperf php unzip wget

    - name: Download and set up Android SDK
      run: |
        cd td/example/android/
        # Create SDK directory and download SDK tools
        mkdir -p SDK
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O sdk-tools.zip
        unzip sdk-tools.zip -d SDK
        rm sdk-tools.zip
        export ANDROID_HOME=$(pwd)/SDK
        # Install SDK components
        SDK_CMD="$ANDROID_HOME/cmdline-tools/bin/sdkmanager"
        echo y | $SDK_CMD --licenses
        $SDK_CMD "platforms;android-34" "build-tools;34.0.0"

    - name: Download and set up Android NDK
      run: |
        cd td/example/android/
        # Create NDK directory and download NDK
        mkdir -p NDK
        wget https://dl.google.com/android/repository/android-ndk-r27-linux-x86_64.zip -O ndk.zip
        unzip ndk.zip -d NDK
        rm ndk.zip
        export ANDROID_NDK_HOME=$(pwd)/NDK

    - name: Print environment variables
      run: |
        echo "ANDROID_HOME=$ANDROID_HOME"
        echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME"

    - name: Build TDLib for Android
      run: |
        cd td/example/android/
        ./build-tdlib.sh

    - name: Zip the TDLib Android folder
      run: |
        cd td/example/android/
        zip -r tdlib-android.zip ./

    - name: Upload the artifact
      uses: actions/upload-artifact@v3
      with:
        name: tdlib-android
        path: td/example/android/tdlib-android.zip
