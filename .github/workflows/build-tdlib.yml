name: tdlib-build

on:
  push:
    paths:
      - '.github/workflows/build-tdlib.yml'

jobs:
  build-android:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: setup
        run: |
          sudo apt-get install -y make git zlib1g-dev libssl-dev gperf cmake clang libc++-dev libc++abi-dev ninja-build

      - name: download ndk
        run: |
          mkdir /opt/android-ndk-tmp
          cd /opt/android-ndk-tmp
          wget -q https://dl.google.com/android/repository/android-ndk-r20-linux-x86_64.zip
          unzip -q android-ndk-r20-linux-x86_64.zip
          mv ./android-ndk-r20 /opt/android-ndk
          cd /opt/android-ndk
          rm -rf /opt/android-ndk-tmp
          export PATH=$PATH:/opt/android-ndk
          
      - name: build ssl
        run: |
          export ANDROID_NDK_HOME=/opt/android-ndk
          export ANDROID_NDK_ROOT=/opt/android-ndk
          cd td/example/third_party/crypto
          ./build-all.sh    

      - name: clone
        run: |
          git clone https://github.com/tdlib/td.git
          cd td

      - name: setup td
        run: |
          cd td/example
          mkdir jnibuild
          cd jnibuild
          cmake -DCMAKE_BUILD_TYPE=Release -DTD_ENABLE_JNI=ON -DCMAKE_INSTALL_PREFIX:PATH=../example/java/td ..
          cmake --build . --target install

      - name: zip
        run: |
          cd td/example/
          zip java.zip 
          
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: android-${{ env.td_version }}-${{ env.td_commit_hash }}
          name: Android ${{ env.td_version }}-${{ env.td_commit_hash }}
          body: https://github.com/tdlib/td/tree/${{ env.td_commit_hash }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'td/example/java.zip'
